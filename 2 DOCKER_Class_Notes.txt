###  DOCKER TOPIC  ###

# 24th Dec Tue - Docker Images - 2 
# 25th Dec Wed - Docker PORT MAPPING - 3
# 26th Dec Thu - Docker Containers, Data Migration - 4 
# 03th Jan Fri - Docker State - 5
# 08th Jan Wed - Docker DockerHUB - 6
# 09th Jan Thu - Docker Voulme, Basic Dockerfile - 7
# 10th Jan Fri - Docker - DockerFile - 8
# 16th Jan Thu - Docker - DockerFile - 9
# 17th Jan Fri - Docker - DockerFile - 10

================================================================================================================================================================
# 24th Dec Tue  - Docker Images -2 
Missing lecture of 23 Dec Not recorded for Docker Architecture in App Also
 
dockerd  #start service with log
dockerd --debug 

docker run hello-world
docker ps   # To see running state of conatiner
docker run -it nginx  # To install, run and to see contuinous logs, -it = Intractive Mode Terminal.
docker inspect <containerID>  # To see IPs and configure about that conatiner
docker ps -a   # To see closed containers
docker run -itd nginx   # Its called docker daemon, To run in background, -d = Detached Mode Run.
#nohup command is giving name to containerd
#docker Image name pulls from DokerHub, who created by.
docker images   # To see Images

#To give our name
docke run -itd --name tom nginx
docker ps
docker inspect <conatinerID> | grep -i "tom"

#To start existing conatiner
docker ps -a
docker start <conatinerID>

--------------xxxxxxxx------------
Missing 23 Dec Not recorded 
 
dockerd  #start service with log
dockerd --debug 

server {

    listen                           80;

    server name              18.116.40.70;

    root                           /opt/tomcat/tomcat/webapps/;

location / {

             proxy_set_header X-Forwarded-Host $host;

             proxy_set_header X-Forwarded-Server $host;

             proxy set header X-Forwarded-For $proxy_add_x_forwarded_for;

             proxy pass http://18.116.40.70:8080/;
}
}
---------


your website/application-

Rele

Mrve same

tomcat.tample.com

rwol

location

prety at hender X-Forwarded-Hont Shost, praty at header X-Forwarded-Server Shest

pravy set header X-Forwarded-Est way add forwarded


---------

18 Jan half recording in App

================================================================================================================================================================

================================================================================================================================================================
# 25th Dec Wed Docker -3
PORT MAPPING
docker container run centos # docker - container,images,network all we can run 
docker container run centos sleep 60
docker container run -d centos sleep 60 # -d runs in background, screen will not freeze 
docker container run -d -it centos docker container stop <ContainerID> Or NAMES 
docker container start <ContainerID> docker container ls -a 
docker container restart <ContainerID> 
docker container rm <ContainerID> # If container running state we can't delete 
docker container rm <cec7> <ContainerID> <ContainerID> <ContainerID> 
docker container rm -f <ContainerID> # To remove running container using '-f' flag 

docker container run -it centos /bin/bash # To go direct container 

docker container ls 
docker container inspect <ContainerID> | grep -i "ipadd" # To see container IP 
curl http://ip

ctrl + p + q # To exit without shutdown container
docker container <containerID> new-name # To change the container name 

docker container stats centos # To see Usage of RAM, MEM etc
docker container top centos 

## PORT MAPPING ##
docker container run -p 3600:80 -it --name webapache3 ubuntu /bin/bash   # Mapping with 3600 port, It means when U hit 3600 port it redirect to port 80 of container is called mapping.

install apache2 
cd /var/www/html/ #Blank the index.html file first 
echo "This is apache container" >> index.html
docker container ls 
curl http://IP:3600  # Allow port in Main Server.
================================================================================================================================================================

================================================================================================================================================================
# 26th Dec Thu Docker - 4
Docker Containers, Data Migration

docker container ls
docker container ls -a   # Simliar to command docker ps
docker container rm <conatinerID> <conatinerID>
docker container run -d -it ubuntu
docker conatiner ls
docker conatiner --help
docker conatiner rename <conatinerID> champu   # To rename NAMES
docker conatiner ls

# To go inside conatiner
docker conatiner attach champu
create files or folders
Ctrl p+q, dont write exit its stop the container or ctrl+d also.

docker conatiner ls
docker conatiner stats champu   # To see Ram, Memory

# To Pause docker conatiner temporary bases
docker conatiner pause champu  --> NAME or ID
docker conatiner unpause champu  # To unpause or running
docker conatiner ls

# To Stop docker conatiner
docker conatiner stop champu   # Its means Gracefully Kill
docker conatiner stats  # To see Memory

# To start docker conatiner
docker conatiner start champu

# Exaples: To see RAM utlization in other tab
docker conatiner attach container
## apt-get update
#apt-get install apache
service apache2 start

watch date  # To watch executed commands memory, cpu etc. exit code to see. || Run this command in another tab
docker conatiner top champu

docker conatiner wait champu
docker conatiner kill champu  # Its means forcefully Kill


# Data Migration
 Now send file or copy from Ubuntu server to inside of container (Same Machine)

Now create container
docker conatiner run -it --name data-bkp ubuntu /bin/bash   # bin-bash for direct go the conatiner

Now go the Ubuntu /etc or select exact file
tar -czvf web.tar /etc
docker conatiner cp web.tar data-bkp:/tmp/   # To copy the file same as SCP command, Now U can see into container data-bkp /tmp/

# If you index.html in Container nginx, Then U can curl the Ip of that container from Ubuntu Server
curl http://IP 

#Now Move Container to NEW Ubuntu Server
Launch New Instance 
And install Docker in new Machine
vim /etc/ssh/sshd_config.d/ssh.config   --> for sharing files and access  OR Change in 60-clouding-settings.conf  file and change to yes
 #Comment out the PasswordAuthencation yes  --> Remove the hash'#'
systemctl restart ssh
passwd Ubuntu  --> To set password

#In Old Ubuntu Server | Export
docker ps
docker conatiner ls
docker conatiner export data-bkp > old-container.tar   # To take backup, instead of ">" U can use this flag "-o"
scp old-container.tar ubuntu@IpUbuntuServer:/home/ubuntu 

# In New Ubuntu Server | Import
cd /home/ubuntu/  --> U can see old-container.tar in that folder
#docker image import old-container.tar
docker image import old-container.tar new-conatiner   --> To give name 
echo $?
docker images
docker conatiner ls
docker conatiner run -it --name new-data-bkp new-conatiner /bin/bash
Now U can see the files index.html etc 

##>   Or use -o # To tar ##
================================================================================================================================================================

================================================================================================================================================================
# 03 Jan Fri Docker - 5
Docker state

docker container ls
docker volume ls
docker network ls   # To see network details 

docker state less    ## Means it's doesn't not store data, Voulme is used for storing data, Interview Question.

# Play with docker --> search and practise.

docker container restart
docker container kill <ContainerID>
docker conatiner rename <ContainerID> New_Name   # To chnage running container
docker container ls
docker container top  # Its doesnot show all.
docker container top <ContainerID>
docker container stats  # To see Memory
docker container kill $(docker ps -a)  # To kill all process

docker container run -itd --name webserver -p 8080:80 nginx  # Mapping insatll nginx
docker container run -itd --name webserver2 -p 80:80 nginx:1.7.11   # To specfic nginx version, If you give older version it give error of depecrated. So give latest version or Moderate 1.14.

# Path of Conatiners and Images store the data.
cd /var/lib docker image

docker state less - means no date attach for simple process and like practise.
docker state full - means Voulme data attached and data will be saved.
================================================================================================================================================================

================================================================================================================================================================
# 08th Jan Wed Docker - DockerHUB 6
Pull, Convert from Conatiner to Image

# Login into DockerHUB Website and create New account and sigin.
# Launch EC2 instance and Install Docker.

docker info
systemctl status docker
systemctl enable docker

docker conatiner run ubuntu  # Its search first locally then go the DockerHUB and download.
cd /var/log/docker/   # All settings files are here.

docker pull httpd  # Its avaiable in DockerHUB and command also for pull the Image.
docker image ls

# There are two types of Repos.
1. Private 
2. Public

# To push Image 
First Re-name the image, Or TAG With Your Name.

docker tag <Image-Name> <New-Name>/<New-Name>
docker tag httpd user-name28/apache-server
docker image ls

docker push apache-server
docker login   # Fisrt Login into DockerHUB
 - It's show two option login with username or ont-time code with link. Then copy link & paste in browser and paste code also then it add successfully.
# docker login -u <username>  # Option 2

docker push apache-server
 - Check in DockerHUB Repository for that Image

## To create Your oun Image its use Dockerfile

Example:
docker container run -it --name webserver ubuntu /bin/bash
apt-get update
apt-get install apache2
service apache2 start
service apache2 status
cd /var/www/html/
echo "This is my image from docker hub" > index.html
cat index.html
Then exit from conatiner
docker conatiner inspect 7172
curl http://IP

## Now convert from container to Image
docker conatiner ls
docker image ls
docker conatiner export <conatinerID> -o webserver.tar
ls
docker image import webserver.tar <user-name28>/webserver:v1.2  # Comand to create Image.
docker image ls
docker image push <user-name28>/webserver:v1.2   # For Push Name should be UNIQUE Mandatory to avoid errors & Isuues.

docker conatiner rm -f 7172

docker image ls
docker images
docker image rm <ImageID>
docker images 

# Now U can pull the same image from your DockerHUB Repo, command aslo there.
docker pull <user-name28>/webserver:v1.2
docker image ls
docker container run -it --name websever -p 80:80 <user-name28>/webserver:v1.2 /bin/bash
service apache2 status/start
 Now ctrl P+Q exit from conatiner
docker conatiner ls
Now U can index page see from website also

# docker login  # To see where credentails saves
Login credentails save in /root/.docker/config.json
If you delte config.json then U cant push image.
================================================================================================================================================================

================================================================================================================================================================
# 09th Jan Thu Docker Volume- 7
Volume, Basic Dockerfile

dockerhub also called as registry.

Launch EC2 instance Ubuntu
- Login through putty OR WSL
  Install DOCKER
  
# Creating Docker Voulme

- docker volume --help
  docker volume create myvol
  docker volume ls
  docker volume inspect myvol
  cd /var/lib/docker/volumes/myvol/_data/
  touch champu {1..10}   # Main server
  
- Login with another tab
  docker conatiner ls
  docker container --help
  docker container run --help
  docker conatiner run -it -v myvol:/tmp --name ram ubuntu /bin/bash
  cd /tmp/ ; ls  # Now if U create new files Main server, its shows here also because of mounting.
  # If U delete files here, but its avaiable in Main server so Its safe to add Volume Always.
  
# Ex-2 Docker File

- touch Dockerfile
  vim Dockerfile
FROM ubuntu:14.04
RUN apt-get update -y 
RUN apt-get install apache2 -y
RUN service apache2 start
#cmd
  # Write the Above Lines in Dockerfile & Save.

- Now build this Image
  docker image build -t myimages:v1.0 .   # (.) dot means current Directory/Location, -t for taging Ur Unique name & version number.
  docker image ls     # Create index.html file in Main Server .._data/ and some lines
  docker container run -v myvol:/var/www/html -it --name webserver -p 80:80 myimages:v1.0 /bin/bash
  service apache status/start  # Then serach page in web. In Main Server path changes in html file then check.
  
# Ex-3 search html page template content copy link from dowmload button and paste in main server and download using this command wget <Link> then unzip.
  mv carvilla-v1.0/* .     # In web U can see cars website.
  docker conatiner ls
  
  docker conatiner kill <conatinerID>  # Its stop that cars webpage
  docker container run -v myvol:/var/www/html -it --name ajay -p 80:80 myimages:v1.0 /bin/bash  # Its show cars website because of volume & start service.
  
# add, copy, argo Advance Topics

# Ex-4 Now with mysql
- docker container run -it -d --name mydatabase -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql   # -e for database environment & PasswordLess
  #docker container run -it -d --name mydatabase -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql /bin/bash
  docker volume ls
  docker volume lnspect <ID>
  docker container ls
  docker attach ID OR docker exec -it <ID> /bin/bash
  mysql  # To login into mysql database
  show databases;
  create database india;
  show databases;
  Now exit using P+Q.
  docker conatiner ls
  docker conatiner rm -rf <ID>
  docker volume ls   # Its not delete voulme, so Ur database is safe, U can use that linking with new conatiner.
  docker container run -v <ID>:/var/lib/mysql -it -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql
  
  docker conatiner ls  # Go to new conatiner
  docker exec -it <ID> /bin/bash
  mysql
  show databases;   # Its shows India database.
================================================================================================================================================================

================================================================================================================================================================
# 10th Jan Fri - Docker - DockerFile - 8

Types of Volumes:
1. Bind
2. Named and Anonymous volume 

Difference between attach & exec command.

We can set limit to Containers.
We can see also when container created, crashing and other files also.
There are also softlimit and hardlimit, but in hardlimit High chances of crashing container.
We can assign kota also to storage.
We can login with ssh also


Docker image can be pushed to DockerHub, Nexus, AWS ecr, podman, containerd, rocket

In dockerfile we can use RUN apt-get && apt-get install -y nginx  # using && both command can be use.

# If you create Dockfile with custom name also and make build aslo using below command.
cd /tmp/
vim CustomDockerFile
docker image build -t myimage:v1 -f /tmp/CustomDockerFile 
docker image build -t myimage:v2 -f github:/CustomDockerFile   # Through using GitHub, we can build image.
docker image ls
docker container run -it --name webserver -p 80:80
curl ident.me.   # To get exact IP and search in WebBrowser.

# We can change the registry from global to Private/Local. # Find Urself on net for details.
 Not confirmed path /etc/docker/daemon.json
docker run -d -p 5000:5000 --name registry registry:2.7
docker container ls
docker tag Ubuntu localhost:5000/Ubuntu 
docker push localhost:5000/Ubuntu 

Completed.
================================================================================================================================================================

================================================================================================================================================================
# 16th Jan Thu - Docker - DockerFile - 9
docker image build -t sadhix:v1 -f /opt/Dockerfile  # If U want to give path then use -f flag. 

# When you run same Dockerfile without any changes in them, then Its give same IMAGE ID, But if you change in or add someP commands then run then it's give different IMAGE ID. 

# To see docker history
docker image history
docker image history ID
docker image history name:v1
docker image history name:v2   # To see different between v1 & v2

# In one line we can give commands.
FROM ubuntu:14.0
RUN apt-get update -y && apt-get install -y apache2 tree openssh-server python
docker image  build -t sadhix:v5 .
docker conatiner run -it --name sadhixapp3 sadhix:v5 /bin/bash    # Give container name as sadhixapp3 for creating container using sadhix:v5 IMAGE. 

# When you add some command in between lines then it's not getting from cache, it's install new means creating new layers. If you add commands after last line then it's cache all then go to last command, that's why it's not take so much time to build Image. 

# Docker Label #
For giving Name & other's all information like git config. 
FROM ununtu:14.04
label name="Tom"
label emailid="tom@gamil.com"
label mobile="1234567890"
RUN....... Etc
## It's gets from all caching layers because you just adding label. 
docker image inspect sadhix:v10  # In that shows label content and all information, if someone want to contact U. 

# Docker Environment Variable Set  #
FROM
label
env name="dev"
env pass="dev123"
RUN..... ETC 
## If you give same version number when build a an IMAGE, its merge to old version and create new one also without name <none>  and use caching layers. 
Create container using that Image and fire command - env


Add in last line
run usersdd $name & echo "$name:$pass" | chpasswd

# Its by default login with root but U can change to Other user in container
Add in last name
user  $name

# adduser create also user home directory and user. 
# useradd create only user. 

# To go direct path  #
Last line
workdir /var/www/html
# pwd    ## hash use for comment, its not use this command. 

#  create one file in main machine and copy to container #
touch shivam  # In main machine
In dockerfile add in last line
copy shivam /var/www/html/
Then build & run container

add docker-tar.gz /var/www/html/   # Its copy to that container and same time do un-tar also. 

# You can use link also
run apt-get install -y unzip  # First don't use, check if it's work or not
ADD carvilla.zip /var/www/html/
ADD https://www.html-temlates-carvilla.zip /var/www/html/  # Its same give with unzip files. 
RUN unzip carvilla.zip   #  Use all Captain letters for commands to avoid issue and U use all small letters and one use Capital letter command it's give warning also. 
================================================================================================================================================================

================================================================================================================================================================
# 17th Jan Fri - Docker - DockerFile - 10
ADD # Only works for tar not for zip, so use additional commamd to unzip the file. 

ADD https://www.html-temlates-carvilla.zip /var/www/html/
RUN unzip /var/www/html/carvilla.zip 

ADD docker-tar.gz /var/www/html/  # Its works doesn't not required additional commamd to untar like umzip, Its automatically copy and untar that file. 

docker rmi -f $(docker images -q)   # To delete all IMAGES in one command. 
docker container rmi -f $(docker ps -aq)   # To delete all CONTAINERS in one command. 

docker system prune --all --force  # To delete all CACHE, IMAGES & CONTAINERS. 
docker builder prune  # To delete only Cache

echo 1 > /proc/sys/vm/drop_caches  # To flush cache. 

docker build -t sadhixapp1 -< sadhixDockerfile  # To run custom DockerFile. 

#
RUN unzip clini.zip
RUN rm -f klinik.zip index.html
RUN cp -rvf clinic-website-template/* .   # To copy

#  To run commands

CMD ["tree"]   # Its called UserData means to run first this commands. 

Ex:2
CMD ["python3"]

Content of Dockerfile
vim Dockerfile

================================================================================================================================================================