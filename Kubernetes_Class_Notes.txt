# 05 Feb Wed - Kubernetes -1 Explanation & Vinala Repeat Required
# 07 Feb Fri - Kubernetes -2 Architecture
# 10 Feb Mon - Kubernetes -3 Master Node Explanation
# 12 Feb Wed - Kubernetes -4 Pod Working & Architecture
# 14 Feb Wed - Kubernetes -5 Recording Not Avaiable in PC  && pending
# 17 Feb Mon - Kubernetes -6 - pending 1:57
# 19 Feb Wed - Kubernetes -7 - pending 2:10
# 21 Feb Fri - Kubernetes -8 - pending 2:10
# 24 Feb Mon - Kubernetes -9 - pending 2:10
# 26 Feb Wed - Kubernetes -10 - pending 2:12
# 28 Feb Fri - Kubernetes -11 - pending 1:26
# 03 Mar Mon - Kubernetes -12 - Helm & Practical pending 1:57
# 05 Mar Wed - Kubernetes -13 Helm - pending 2:14

================================================================================================================================================================
## Kubernetes Interview Questions

1) What is the difference between a stateless and stateful pod or container in Kubernetes?
2) What are deployments in Kubernetes? Explain the different types of deployments.
3) What is a ReplicaSet, and how does it differ from a ReplicationController?
4) Explain the architecture and workflow of Kubernetes.
5) What is the difference between vertical scaling and horizontal scaling in a Kubernetes pod?
G) How does autoscaling work in Kubernetes? Explain the Horizontal Ped Autoscaler (HPA) and Vertical Pod Autoscaler (VPA).
7) How does resource allocation work in Kubernetes? Explain CPJ and memory limits for a pod.
8) What is an Ingress Controller in Kubernetes, and how does it manage external traffic?
9) What is a Service in Kubernetes? Explain different types of services such as ClusterIP, NodePort, and LoadBalancer.
10) How does Kubernetes handle service discovery and load balancing?
11) How do you take a backup of the etd database in Kubernetes?
12) What is a Persistent Volune (PV) and a Persistent Volume Claim (PVC)?
13) Explain the difference between emptyDir, hostPath, and Persistent Volumes.
14) How do you retrieve logs from a Kubernetes application pod?
15) What are self-healing capabilities in Kubernetes, and how dces Kubernetes ensure high availability?
16) What are the common troubleshooting steps for failed pods?
17) How do you monitor Kubernetes clusters using Prometheus and Grafana?
18) What is the difference betwsen kubectl create and kubectl apply?
19) What are ConfigMaps and Secrets, and how do they help manage configurations in Kubernetes?
20) What is a Heln chart, and how does it simplify Kubernetes deployments?
21) How does Kubernetes handle RBAC (Role-Based Access Control)?
22) What are Network Policies, and how do they secure pod conmunication?
23) How can you secure container inages in Kubernetes deploynents?
================================================================================================================================================================

# 05 Feb Wed - Kubernetes -1

Kubernetes 

Required 2 Machines 
1. Control Plane / Master 
2. Worker 
And Swap Memory should be OFF it's is mandatory.
And required Network drive rule.And Kernel module.

Then install perquisites and install Kubernetes.
Vinala set-up.

kubectl create deployment nginx --image=nginx
kubectl get pod   --> To see running Pods

kubectl expose deployment nginx --type=NodePort --port=80
kubectl get svc nginx 

Search with port which kub bydefault open for Nginx webpage & Open Port in worker node
================================================================================================================================================================

================================================================================================================================================================

================================================================================================================================================================
# 07 Feb Fri - Kubernetes -2 Architecture

# Borg is old name of K8s when google is using.
Kubernetes is workstation / Orchestration.

### Architecture ###
Admin to Kube-API-Server then Controller Manger then asking take details form etcd-databse then Controller Manger give to Kube scheduler then go to again API then go to the node server then create containerd.

Path:
"C:\Users\Dell\Desktop\IPM_CMDS\SS\SS_9__07-02-25_Kube_Arch.png"
"C:\Users\Dell\Desktop\IPM_CMDS\SS\SS_10__07-02-25_Kube_Arch.png"

container management docker 
docker -- swarm -- conatiner --
docker product -- open source 

package -- install -- cust --
cust
cust --- open swarm -- highload , security , scaling , load balancer

container -- swarm --


kublet 
kube - Manger
kube - Schduler
kube - Proxy
etcd - databse 
api - server
Container engine:
 = Container CRI
 - containerd
 - Rocket
 - Podman

## Install ##
Update the systen and install dependencies:

sude apt update && sudo apt upgrade -y
sudo apt install apt-transport-https curl -y

Install containerd:

sudo apt install containerd -y

Configure containerd:

sudo nkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml > /dev/null
sudo sed -i 's/SystendCgroup - false/SystemdCgroup - true/' /etc/containerd/config.toml
sudo systenctl restart containerd

Disable swap:

sudo swapoff -a
sudo sed -i '/ swap / s/^\( .* \)S/#\1/g' /etc/fstab

Load necessary kernel modules:

sudo nodprobe overlay
sudo nodprobe br_netfilter

Set required sysctl parameters:

cat << EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-ip6tables - 1
net.ipv4.ip_forward
EOF
sude sysctl -- system
.

# Commands
kubctl get node
systemctl status conatinerd.service
systemctl status kubelet.service
kubectl --help
kubectl get pod -A  # To see all running pods.

KUBECONFIG=$HOME/.kube/c
echo $HOME/.kube/config/root/.kube/config

kubectl delete pod  
kubectl delete pod nginx-bf5d5cf98-db4kd  # To delete pod
kubectl run pod nginx
kubectl get pod

================================================================================================================================================================

================================================================================================================================================================

# 10 Feb Mon - Kubernetes -3 Master Node Explanation

Architecture:
 Admin to Kube-API-Server then Controller Manger then asking take details form etcd-databse then Controller Manger give to Kube scheduler then go to again API then go to the node server then create containerd.
-------------------------------------------------

etcd like zookeeper database also present.

Maximum we can use two master nodes.

kubectl get node
kubectl get pod -A.  # We can see all master nodes content 
 Like:
   - coredns
   - etcd
   - kube-api-server
   - kube-controller-manager-ip
   - kube-porxy-x8bhm
   - kube-scheduler

# For accessing master node via other Linux & Windows.
  Download kubectl and configure in environment variables.
  And create folder and paste admin content in config file. For this search on google.


## To get access in normal Linux doesn't not required k8 nodes. 
mkdir  .kube
cd    .kube
ls
vi config    #  Paste from Master  etc/kubernetes/admin.conf To get access. 
cat /etc/kubernetes/admin.conf   #  In master Node.

================================================================================================================================================================

================================================================================================================================================================

# 12 Feb Wed - Kubernetes -4 Pod Working & Architecture

# Compenets name:
Eg : Docker swarm (Docker), Kubernetes (Google), mesos (Apache). 

kubectl:
 - kubectl run hello-minikube
 - kubectl cluster-info
 - kubectl get nodes
# Don't tell we use minikube, because it's present like your are learning kubernetes. 

## There are three types of service:
Service:
    - clusterip
    - Nodeport
    - Loadbalancer


## Main Working  ##
Service IP ---> Deployment ---> Pod ---> Pause ---> Container.

- Whenever Pod creates its create one Pause conatiner also, means that no.of craeted container plus one pause container also (eg: Nginx + Pause). If container delete then Pause its use to recreate that containers.
- Whenever Pod gets delete deleted then Deployment its use for recreate that Pod.


Pod means:
 - Logical boundaries and collection of containers.
 - In Pod automatically creates one Pause container for storing all details of pod and conatiner and pause doesn't have personal IP. 

Pause means:
 - Its storing all details of pod and conatiner and pause doesn't have personal IP. And its use for recreate that container.

kubeadm token create --print-join-command    # To Print command of join in master, so in worker we paste that cmd to joining node. 
kubectl get node   #  To see no.of nodes. 
kubectl get pod  #  To see no.of pods.

kubectl run db-server --image=mysql   # To create Pod.
kubctl run webserver --image=nginx.
kubectl get pod  #  To see no.of pods. 

kubectl exec -it webserver /bin/bash   #  To login in container same like command in docker. 

## For Copy and paste in kubernetes play in browser:
Copy ctrl+insert+c
Paste ctrl+insert+v

================================================================================================================================================================

# 14 Feb Fri 25 - Recording Not Avaiable in PC.
Topic : K8s Cluster Reset and Token Management 
kubeadm, etcd --> IQ 

Kubeadm reset: Phases - 
1. preflight 
2. update-cluster-status 
3. remove-etcd-member
4. cleanup-nodes 

kubeadm reset --preflight
kubeadm reset --skip-phases remove-etcd-member    #To remove only etcd. 

# Launch two instnace for Master & Node then install Kubernetes
 
systemctl status containerd.service
watch kubectl get node -A    # To see Ip Also In master 
cd /var/lib/etcd/member/snap # To see database 
cd /etc/kubernetes/manifests # To see Configuration
cd /etc/kubernetes/pki     # Same above


kubectl reset   # It's delete all files in /etc/kubernetes and /var/lib, it doesn't not reset work node and other things, it's required manually, rm -rf /etc/cni/net.d file aslo in both master and worker.
systemctl restart containerd.service

## In Worker Node server
kubeadm reset 


In master 
kubeadm init command........
kubectl get pod -A
systemctl restart containerd.service and check status 
kubectl apply -f ......
kubeadm join command.................................
kubectl get pod -A    # To check status of workers nodes connected or not.
# If its show not connected, then go to worker node server and restart the containerd.service and kublet then check again.

# To delete node from cluster
kubectl get pod -A
kubectl delete node worker

kubectl describe pod <kube-name> -n kube-system  # To see IP

## Token Management  ##

#In Master Server 
kubectl get csr
kubeadm token list   # To see list.
kubeadm token create  # To create new Token.
kubeadm token create --ttl=5m   # For only 5mins.
kubeadm token create --ttl=0    # For infinity and it's not delete.
opensllll..... Command 
kubeadm token create --print-join-command   # To join

# In Worker Node
Steps: For Reset is Mandatory.
1. kubectl reset -f
2. rm -rf /etc/cni/net.d
3. systemctl restart containerd.service
4. systemctl restart kublet.service
## rm -rf /etc/kubernetes/pki/ca.crt  --> for only remove CA certificate 
kubeadm join IP -token --discovery......

Step 2: With confirmation Token.
First reset all 
kubectl delete clusterrolebinding kubeadm:node-autoapprove................

Now fire join command in worker node
Its asking approval from Master.

In master 
kubectl get csr
kubectl certificate approve <NAME>    # To approve 

Completed but not have proper commands.
================================================================================================================================================================

================================================================================================================================================================

# 17 Feb Mon - Kubernetes -6




================================================================================================================================================================